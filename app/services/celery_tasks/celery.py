import os

from celery import Celery

# Создаем экземпляр приложения Celery с именем "celery".
# Аргумент "celery" — это имя экземпляра, которое используется для идентификации этого приложения
# в распределенной системе задач. Это имя можно использовать в конфигурации и для логирования.
# Также это имя часто совпадает с именем основного модуля, что помогает избежать путаницы.
app = Celery("celery")

# Настраиваем URL брокера задач (например, Redis или RabbitMQ) с использованием переменной окружения.
# Брокер задач — это промежуточный сервис, который принимает и ставит задачи в очередь,
# а затем распределяет их между доступными воркерами (workers).
app.conf.broker_url = os.getenv("CELERY_BROKER_URL")

# Настраиваем URL бэкенда для хранения результатов выполнения задач с использованием переменной окружения.
# Бэкенд результатов (result backend) — это место, где хранятся результаты выполнения задач Celery.
# Оно используется для того, чтобы можно было получить результат выполнения задачи позже.
# Например, это может быть база данных, Redis, или файловая система.
app.conf.result_backend = os.getenv("CELERY_RESULT_BACKEND")


@app.task()
def some_task(a: int, b: int):
    print(a, b)
    return "data"
